<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_5.0.xsd">
  	
  	<input file="base_appTraining.csv" separator=";" type="com.axelor.apps.base.db.AppTraining" call="com.axelor.csv.script.ImportApp:importApp">
  		<bind column="dependsOn" to="dependsOnSet" search="self.code in :dependsOn" eval="dependsOn.split(',') as List"/>
  	</input>
  	
  	<input file="base_appRecruitment.csv" separator=";" type="com.axelor.apps.base.db.AppRecruitment" call="com.axelor.csv.script.ImportApp:importApp">
  		<bind column="dependsOn" to="dependsOnSet" search="self.code in :dependsOn" eval="dependsOn.split(',') as List"/>
  	</input>
  	
  	<input file="base_appAppraisal.csv" separator=";" type="com.axelor.apps.base.db.AppAppraisal" call="com.axelor.csv.script.ImportApp:importApp">
  		<bind column="dependsOn" to="dependsOnSet" search="self.code in :dependsOn" eval="dependsOn.split(',') as List"/>
  	</input>

    <input file="auth_role.csv" separator=";" type="com.axelor.auth.db.Role" search="self.name = :name"/>

  	<input file="auth_permission.csv" separator=";" type="com.axelor.auth.db.Permission" search="self.name = :name" call="com.axelor.csv.script.ImportPermission:importPermissionToRole">
        <bind to="canRead" eval="can_read == 'x' ? 'true' : 'false'"/>
        <bind to="canWrite" eval="can_write == 'x' ? 'true' : 'false'"/>
        <bind to="canCreate" eval="can_create == 'x' ? 'true' : 'false'"/>
        <bind to="canRemove" eval="can_remove == 'x' ? 'true' : 'false'"/>
        <bind to="canExport" eval="can_export == 'x' ? 'true' : 'false'"/>
    </input>
    

</csv-inputs>