<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_5.0.xsd">
  
     <grid name="bank-reconciliation-grid" title="Bank reconciliations" model="com.axelor.apps.bankpayment.db.BankReconciliation" orderBy="-fromDate,-toDate,company.code,bankDetails.iban">
			<field name="name" />
			<field name="fromDate" />
			<field name="toDate" />
			<field name="company"/>
			<field name="bankDetails" form-view="bank-details-form" grid-view="bank-details-grid"/>
			<field name="currency" canEdit="false" form-view="currency-form" grid-view="currency-grid"/>
			<field name="journal" form-view="journal-form" grid-view="journal-grid"/>
			<field name="startingBalance" />
			<field name="endingBalance" />
            <field name="statusSelect"/> 
     </grid>
  
	<form name="bank-reconciliation-form" title="Bank reconciliation" model="com.axelor.apps.bankpayment.db.BankReconciliation" width="large" 
	onNew="action-bank-reconciliation-onnew-group" >
		<panel name="mainPanel" colSpan="12">
			<panel name="detailsPanel" readonlyIf="statusSelect == 2" colSpan="12">
				<field name="statusSelect" showTitle="false" widget="NavSelect" colSpan="12"/>
				<field name="name"/>
				<field name="bankStatement" domain="self.statusSelect = 2"/>
				<field name="company" canEdit="false" widget="SuggestBox" onChange="action-bank-reconciliation-set-currency" form-view="company-form" grid-view="company-grid" required="true"/>
				<field name="currency" canEdit="false" form-view="currency-form" grid-view="currency-grid" required="true"/>
				<field name="bankDetails" canEdit="false" form-view="bank-details-form" grid-view="bank-details-grid" onSelect="action-bank-reconciliation-method-set-bank-details-domain" required="true"/>
				<field name="includeOtherBankStatements"/>
				<field name="fromDate"/>
				<field name="toDate"/>
				<field name="journal" canEdit="false" domain="self.statusSelect = 1 AND self.company = :company" form-view="journal-form" grid-view="journal-grid"/>
				<field name="cashAccount" canEdit="false" domain="self.company = :company AND self.accountType.technicalTypeSelect ='cash'" form-view="account-form" grid-view="account-grid"/>
			</panel>
			<panel colSpan="12" name="actionsPanel">
				<button name="loadBankStatementBtn" title="Load bank statements" onClick="save,action-bank-reconciliation-method-load-bank-statement" showIf="bankStatement &amp;&amp; !bankReconciliationLineList.length > 0" colSpan="3"/>
				<button name="validateBtn" title="Validate" hideIf="statusSelect == 2" onClick="save,action-group-bankreconciliation-validate-click" colSpan="3"/>
				<button name="showReconciledMoveLineBtn" title="Show reconciled move lines" showIf="statusSelect == 2" onClick="action-bank-reconciliation-view-show-reconciled-move-lines" colSpan="3"/>
			</panel>
		</panel>
		<panel name="bankReconciliationPanel" title="Bank reconciliation" colSpan="12" readonlyIf="statusSelect == 2">
			<panel name="balancePanel" title="Balance" colSpan="12">
				<field name="totalPaid"/>
				<field name="totalCashed"/>
				<separator title="Bank statements"/>
				<separator title="Account"/>
				<field name="startingBalance" colSpan="3" readonlyIf="bankStatement"/>
				<field name="endingBalance" colSpan="3" readonlyIf="bankStatement"/>
				<field name="accountBalance" colSpan="3" readonlyIf="bankStatement"/>
				<field name="computedBalance" colSpan="3"/>
				<label name="balanceEqualLabel" colSpan="12" css="label-danger" title="Computed balance and Ending Balance should be equal" showIf="computedBalance = endingBalance"/>
				<button name="computeBtn" title="Compute" hideIf="statusSelect == 2" onClick="action-group-bankreconciliation-compute-click" colSpan="3"/>
			</panel>
			<panel-related name="bankReconciliationLineList" field="bankReconciliationLineList" colSpan="12" grid-view="bank-reconciliation-line-grid" form-view="bank-reconciliation-line-form" x-can-copy="true" onChange="action-group-bankreconciliation-compute-click"/>
			<panel-dashlet name="showUnreconciledMoveLinesPanel" action="action-bank-reconciliation-view-show-unreconciled-move-lines" colSpan="12"/>
		</panel>
		
	</form>

 
   <action-group name="action-bank-reconciliation-onnew-group">
	   <action name="action-bank-reconciliation-active-company"/>
	   <action name="action-bank-reconciliation-set-months"/>
	   <action name="action-bank-reconciliation-set-currency"/>
   </action-group>
 
   <action-group name="action-group-bankreconciliation-validate-click">
   		<action name="save"/>
   		<action name="action-bank-reconciliation-method-compute"/>
   		<action name="action-bank-reconciliation-method-validate"/>
   </action-group>	
   
   <action-group name="action-group-bankreconciliation-compute-click">
   		<action name="save"/>
   		<action name="action-bank-reconciliation-method-compute"/>
   </action-group>
   	
   <action-record model="com.axelor.apps.bankpayment.db.BankReconciliation" name="action-bank-reconciliation-active-company">
       <field name="company"  expr="eval:__user__.activeCompany" if="__user__.activeCompany != null"/>
       <field name="company"  expr="eval:__repo__(Company).all().fetchOne()" if="__user__.activeCompany == null &amp;&amp; __repo__(Company).all().fetch().size == 1"/>
   </action-record>
   
   <action-record model="com.axelor.apps.bankpayment.db.BankReconciliation" name="action-bank-reconciliation-set-months">
       <field name="fromDate" expr="eval: LocalDate.parse(todayDate).withDayOfMonth(1)"/>
       <field name="toDate" expr="eval: LocalDate.parse(todayDate).toDateTimeAtCurrentTime().dayOfMonth().withMaximumValue().toLocalDate()"/>
   </action-record>
     
   <action-record model="com.axelor.apps.bankpayment.db.BankReconciliation" name="action-bank-reconciliation-set-currency">
       <field name="currency" expr="eval: company?.currency"/>
   </action-record>
   
   <action-method name="action-bank-reconciliation-method-set-bank-details-domain">
     <call class="com.axelor.apps.bankpayment.web.BankReconciliationController" method="setBankDetailsDomain"/>
   </action-method>
   
   <action-method name="action-bank-reconciliation-method-load-bank-statement">
     <call class="com.axelor.apps.bankpayment.web.BankReconciliationController" method="loadBankStatement"/>
   </action-method>
	
   <action-method name="action-bank-reconciliation-method-compute">
     <call class="com.axelor.apps.bankpayment.web.BankReconciliationController" method="compute"/>
   </action-method>
	
   <action-method name="action-bank-reconciliation-method-validate">
     <call class="com.axelor.apps.bankpayment.web.BankReconciliationController" method="validate"/>
   </action-method>
	
   <action-view name="action-bank-reconciliation-view-show-unreconciled-move-lines" title="Unreconciled move lines" model="com.axelor.apps.account.db.MoveLine">
     <view type="grid" name="move-line-bank-reconciliation-grid"/>
     <view type="form" name="move-line-form"/>
     <domain>self.move.journal.id = :journal and ((self.debit &gt; 0 and self.bankReconciledAmount &lt; self.debit) or (self.credit &gt; 0 and self.bankReconciledAmount &lt; self.credit)) and self.account.id = :cashAccount and self.move.statusSelect != 4</domain>
   </action-view>	 
   
   <action-view name="action-bank-reconciliation-view-show-reconciled-move-lines" title="Reconciled move lines" model="com.axelor.apps.account.db.MoveLine">
   	 <view type="grid" name="move-line-bank-reconciliation-grid"/>
     <view type="form" name="move-line-form"/>
     <domain>self.move.id in (select ML.move from BankReconciliationLine as BRL left join BRL.moveLine as ML where BRL.bankReconciliation.id = :bankReconciliationId)</domain>
     <context name="bankReconciliationId" expr="eval: id"/>
   </action-view>	
   
    
</object-views>